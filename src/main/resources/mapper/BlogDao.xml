<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.htr.dao.BlogDao">

    <resultMap id="ResultBlog" type="Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="firstPicture" column="firstPicture"/>
        <result property="flag" column="flag"/>
        <result property="views" column="views"/>
        <result property="appreciation" column="appreciation"/>
        <result property="shareStatement" column="shareStatement"/>
        <result property="commentabled" column="commentabled"/>
        <result property="published" column="published"/>
        <result property="recommend" column="recommend"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="userId" column="user_id"/>
        <result property="typeId" column="type_id"/>
        <result property="description" column="description"/>
        <association property="user" javaType="User">
            <result property="id" column="uid"/>
            <result property="username" column="username"/>
            <result property="nickname" column="nickname"/>
            <result property="email" column="email"/>
            <result property="avatar" column="avatar"/>
        </association>
        <association property="type" javaType="Type">
            <id property="id" column="typeid"/>
            <result property="name" column="typename"/>
        </association>
        <collection property="tags" ofType="Tag">
            <id property="id" column="tagid"/>
            <result property="name" column="tagname"/>
        </collection>
    </resultMap>

    <select id="getBlog" resultMap="ResultBlog">
        select b.id, b.first_picture, b.flag, b.title, b.content, b.views, b.published,
               b.update_time,b.commentabled, b.shareStatement, b.appreciation, b.description,
               u.nickname nickname, u.avatar avatar, u.id uid,
               tag.id tagid, tag.name tagname, b.type_id typeid
        from t_blog b, t_user u, t_tag tag, t_blog_tags tb, t_type type
        where b.user_id = u.id and tb.blog_id = b.id and tb.tag_id = tag.id and b.id = #{id}
    </select>

    <select id="listBlog" parameterType="Blog" resultMap="ResultBlog">
        <bind name="pattern" value="'%' + title + '%'"/>
        select b.id,  b.title, b.update_time, b.recommend, b.published,
               b.type_id, t.id typeid, t.name typename from t_blog b, t_type t
        <where>
            <if test="1 == 1">
                b.type_id = t.id    /*博客类型id=类型id*/
            </if>
            <if test="id != null">
                and b.id = #{id}
            </if>
            <if test="typeId != 0">
                and t.id = #{typeId}
            </if>
            <if test="recommend != false">
                and b.recommend = #{recommend}
            </if>
            <if test="published != false">
                and b.published != #{published}
            </if>
            <if test="title != ''">
                and b.title like #{pattern}
            </if>
        </where>
    </select>

    <select id="listAllBlog" parameterType="Blog" resultMap="ResultBlog">
        select b.id,  b.title, b.update_time, b.recommend, b.published,
        b.type_id, t.id typeid, t.name typename from t_blog b, t_type t
        where   b.type_id = t.id    /*博客类型id=类型id*/
    </select>

    <insert id="saveBlog" parameterType="Blog">
        insert into t_blog (id, title, content, first_picture, flag, views,
                            appreciation, shareStatement, commentabled, published,
                            recommend, create_time, update_time, user_id, type_id, tag_ids, description)
                            values (#{id}, #{title}, #{content}, #{firstPicture}, #{flag},
                            #{views}, #{appreciation}, #{shareStatement}, #{commentabled}, #{published},
                            #{recommend}, #{createTime}, #{updateTime}, #{userId}, #{typeId}, #{tagIds}
                            ,#{description})
    </insert>

    <insert id="saveBlogTag" parameterType="BlogAndTag">
        insert into t_blog_tags (tag_id, blog_id) value(#{tagId}, #{blogId});
    </insert>

    <update id="updateBlog" parameterType="Blog">
        update t_blog set published = #{published},flag = #{flag} ,
                          title = #{title}, content = #{content}, type_id = #{typeId}, tag_ids = #{tagIds},
                          first_picture = #{firstPicture} , recommend = #{recommend} ,
                          shareStatement = #{shareStatement}, appreciation = #{appreciation},
                          commentabled = #{commentabled} ,update_time = #{updateTime}, description = #{description}
                          where id = #{id};
    </update>

    <delete id="deleteTagByBlog">
        delete from t_blog_tags where blog_id = #{id}
    </delete>

    <delete id="deleteBlog">
        delete from t_blog where id = #{id}
    </delete>

    <select id="getIndexBlog" resultMap="ResultBlog">  /*主页博客展示*/
    select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
           t.name typename, t.id typeid,
           u.nickname nickname, u.avatar avatar, u.id uid
    from t_blog b, t_type t, t_user u
    where b.type_id = t.id and  u.id = b.user_id order by b.update_time desc
    </select>

    <select id="getBlogSearch" resultMap="ResultBlog">
        <bind name="pattern" value="'%' + query + '%'"/>
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
               t.name typename, t.id typeid,
               u.nickname nickname, u.avatar avatar
        from t_blog b, t_type t, t_user u
        <where>
            <if test="1 == 1">
                b.type_id = t.id and  u.id = b.user_id
            </if>
            <if test="query != ''">
                and (b.title like #{pattern} or b.description like #{pattern} or b.content like #{pattern})
            </if>
        </where>
        order by b.update_time desc
    </select>

    <select id="getAllRecommendBlog" resultMap="ResultBlog">
        select id, title, recommend from t_blog where recommend = true
        order by update_time desc;
    </select>

    <select id="getByTypeId" resultMap="ResultBlog">
        select b.id, b.title, b.first_picture, b.views, b.update_time, b.description,
               t.name typename, t.id typeid,
               u.nickname, u.avatar avatar, u.id uid
        from t_blog b, t_type t, t_user u
        where (b.type_id = #{id} and t.id = b.type_id and u.id = b.user_id) order by b.update_time desc
    </select>

    <select id="getByTagId" resultMap="ResultBlog">
        select b.id, b.title
        from t_blog b, t_tag tag, t_blog_tags blogtag
        where (blogtag.tag_id= tag.id and blogtag.blog_id = b.id and tag.id = #{id} ) order by b.update_time desc
    </select>

    <update id="updateViews">
        update t_blog set views = views + 1 where id = #{id}
    </update>

    <select id="queryBlogYear" resultType="String">
        select date_format(t_blog.update_time, "%Y") as year from t_blog group by year order by year desc
    </select>

    <select id="findByYear" resultMap="ResultBlog">
        select b.title, b.update_time, b.id, b.flag
        from t_blog b
        where DATE_FORMAT(b.update_time, "%Y") = #{year}
    </select>
    
</mapper>